continue
get_time_group_order
continue
@time_group
get_time_group
get_time_group[:hour]
get_time_group
get_time_group_order
continue
get_time_group_order
continue
get_time_group
get_time_group_order
get_time_group_order[:hour]
get_time_group_order
get_time_group
@time_group
continue
time_struct.new(m_hour.to_i, m_min.to_i)
m_hour.to_i
m_min
m_hour
rs
continue
config
continue
config
continue
config['development']
exit
con
config['development']
continue
config
continue
printf get_time_close.to_i.to_s
printf get_time_close.to_i
get_time_close.to_i
a
printf get_time_close
printf a
continue
config['development']['time'].to_i
config['development']['time']
config['development']
config
continue
config
config['development']
continue
puts a.type_id
a.key
a.ket
puts a
printf a
config['development']['time']
config = YAML.load_file(Rails.root.join('config/config_boe.yml'))
Rails.root.join('config/config_boe.yml')
get_time_close
puts a
continue
a.value
a
printf a.to_s
printf a.to_i
printf a.to_s
printf a
printf 
a
~a
continue
rs
continue
total
continue
group_order_in_two_hour
rs
continue
grouped_order
continue
body
continue
dish_by_order_detail
continue
dish_by_order_detail
continue
Order.find(order_id).order_details.find_by(:dish_id => dish_id)
continueOrder.find(order_id).order_details.find_by(:dish_id => dish_id)
continue
Order.find(order_id).order_details.find_by(:dish_id => dish_id)
continue
body
continue
body
continue
order_detail_chef
continue
Order.find(@id).order_details
continueOrder.find(@id).order_details
diner_reg_tokens
serial_order_detail
continue
ver
continue
role
continue
User.first.as_json.to_s
continue
User.firt.as_json.to_s
continue
Constant::WAITER == role
continue
role
continue
reg_tokens
continue
reg_tokens
continue
Constant::SERVER_CHEF_GCM_KEY
continue
body
continue
order_params.split('_')
order_params
continue
params[:order]
continue
params.permit[:order]
params
continue
cate
dishes
continue
menu[:dishes]
menu[:category]
menu
continue
continues
quit
dish_by_cate
